/**
 * Test ƒë∆°n gi·∫£n cho h√†m taosochitiet m·ªõi
 */

function testTaosochitietSimple() {
  console.log('üß™ TEST TAOSOCHITIET ƒê∆†N GI·∫¢N');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // Test v·ªõi d·ªØ li·ªáu m·∫´u
    const startDate = '2024-01-01';
    const endDate = '2024-12-31';
    const taiKhoanCanXem = ['156']; // T√†i kho·∫£n h√†ng t·ªìn kho
    
    console.log(`üìÖ Test v·ªõi t√†i kho·∫£n: ${taiKhoanCanXem.join(', ')}`);
    console.log(`üìÖ T·ª´ ng√†y: ${startDate} ƒë·∫øn ${endDate}`);
    
    // G·ªçi h√†m taosochitiet
    taosochitiet(startDate, endDate, taiKhoanCanXem);
    
    console.log('‚úÖ Test ho√†n th√†nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói test:', error.toString());
  }
}

/**
 * Test v·ªõi nhi·ªÅu t√†i kho·∫£n
 */
function testTaosochitietMultiAccount() {
  console.log('üß™ TEST TAOSOCHITIET NHI·ªÄU T√ÄI KHO·∫¢N');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // Test v·ªõi nhi·ªÅu t√†i kho·∫£n
    const startDate = '2024-01-01';
    const endDate = '2024-12-31';
    const taiKhoanCanXem = ['156', '131', '331']; // H√†ng t·ªìn kho, Ph·∫£i thu, Ph·∫£i tr·∫£
    
    console.log(`üìÖ Test v·ªõi t√†i kho·∫£n: ${taiKhoanCanXem.join(', ')}`);
    console.log(`üìÖ T·ª´ ng√†y: ${startDate} ƒë·∫øn ${endDate}`);
    
    // G·ªçi h√†m taosochitiet
    taosochitiet(startDate, endDate, taiKhoanCanXem);
    
    console.log('‚úÖ Test ho√†n th√†nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói test:', error.toString());
  }
}

/**
 * Test v·ªõi d·ªØ li·ªáu th·ª±c t·∫ø
 */
function testTaosochitietRealData() {
  console.log('üß™ TEST TAOSOCHITIET D·ªÆ LI·ªÜU TH·ª∞C T·∫æ');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // Ki·ªÉm tra sheet DMTK
    const sheetDMTK = ss.getSheetByName('DMTK');
    if (!sheetDMTK) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y sheet DMTK');
      return;
    }
    
    // L·∫•y m·ªôt s·ªë t√†i kho·∫£n t·ª´ DMTK
    const dataDMTK = sheetDMTK.getDataRange().getValues();
    const taiKhoanList = [];
    
    dataDMTK.slice(1).forEach(row => {
      const maTK = row[0]?.toString().trim();
      if (maTK && maTK.length <= 3) { // Ch·ªâ l·∫•y t√†i kho·∫£n c·∫•p 1
        taiKhoanList.push(maTK);
      }
    });
    
    if (taiKhoanList.length === 0) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n n√†o trong DMTK');
      return;
    }
    
    // L·∫•y 3 t√†i kho·∫£n ƒë·∫ßu ti√™n
    const taiKhoanCanXem = taiKhoanList.slice(0, 3);
    
    console.log(`üìÖ Test v·ªõi t√†i kho·∫£n: ${taiKhoanCanXem.join(', ')}`);
    
    // Test v·ªõi th√°ng hi·ªán t·∫°i
    const now = new Date();
    const startDate = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-01`;
    const endDate = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}`;
    
    console.log(`üìÖ T·ª´ ng√†y: ${startDate} ƒë·∫øn ${endDate}`);
    
    // G·ªçi h√†m taosochitiet
    taosochitiet(startDate, endDate, taiKhoanCanXem);
    
    console.log('‚úÖ Test ho√†n th√†nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói test:', error.toString());
  }
}

/**
 * Test debug d·ªØ li·ªáu
 */
function testDebugData() {
  console.log('üîç DEBUG D·ªÆ LI·ªÜU');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // Ki·ªÉm tra sheet DMTK
    const sheetDMTK = ss.getSheetByName('DMTK');
    if (sheetDMTK) {
      const dataDMTK = sheetDMTK.getDataRange().getValues();
      console.log(`üìä DMTK c√≥ ${dataDMTK.length} d√≤ng d·ªØ li·ªáu`);
      
      if (dataDMTK.length > 1) {
        console.log('üìã Header DMTK:', dataDMTK[0]);
        console.log('üìã D·ªØ li·ªáu m·∫´u DMTK:', dataDMTK[1]);
      }
    }
    
    // Ki·ªÉm tra sheet DL_
    const allSheets = ss.getSheets();
    const dataSheets = allSheets.filter(sheet => sheet.getName().startsWith('DL_'));
    
    console.log(`üìä T√¨m th·∫•y ${dataSheets.length} sheet DL_:`);
    dataSheets.forEach(sheet => {
      const data = sheet.getDataRange().getValues();
      console.log(`  - ${sheet.getName()}: ${data.length} d√≤ng`);
      
      if (data.length > 1) {
        console.log(`    Header: ${data[0].slice(0, 5).join(', ')}...`);
        console.log(`    D·ªØ li·ªáu m·∫´u: ${data[1].slice(0, 5).join(', ')}...`);
      }
    });
    
    console.log('‚úÖ Debug ho√†n th√†nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói debug:', error.toString());
  }
}