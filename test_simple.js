/**
 * Test ƒë∆°n gi·∫£n ƒë·ªÉ ki·ªÉm tra d·ªØ li·ªáu
 */

function testSimple() {
  console.log('üß™ TEST ƒê∆†N GI·∫¢N');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // L·∫•y sheet ƒë·∫ßu ti√™n c√≥ prefix DL_
    const allSheets = ss.getSheets();
    const dataSheets = allSheets.filter(sheet => sheet.getName().startsWith('DL_'));
    
    if (dataSheets.length === 0) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y sheet DL_ n√†o');
      return;
    }
    
    const sheet = dataSheets[0];
    console.log(`üìã Ki·ªÉm tra sheet: ${sheet.getName()}`);
    
    // ƒê·ªçc d·ªØ li·ªáu
    const data = sheet.getDataRange().getValues();
    console.log(`üìä Sheet c√≥ ${data.length} d√≤ng d·ªØ li·ªáu`);
    
    if (data.length === 0) {
      console.log('‚ùå Sheet kh√¥ng c√≥ d·ªØ li·ªáu');
      return;
    }
    
    // Ki·ªÉm tra header
    const headerRow = data[0];
    console.log('üìã Header g·ªëc:', headerRow);
    
    const headerRowUpper = headerRow.map(h => h.toString().trim().toUpperCase());
    console.log('üìã Header chuy·ªÉn ƒë·ªïi:', headerRowUpper);
    
    // Ki·ªÉm tra d·ªØ li·ªáu m·∫´u
    if (data.length > 1) {
      const sampleRow = data[1];
      console.log('üìã D·ªØ li·ªáu m·∫´u (d√≤ng 2):', sampleRow);
      
      // T·∫°o object theo header
      const sampleData = {};
      headerRowUpper.forEach((header, index) => {
        sampleData[header] = sampleRow[index];
      });
      
      console.log('üìã D·ªØ li·ªáu ƒë√£ map:', sampleData);
      
      // Ki·ªÉm tra c√°c c·ªôt quan tr·ªçng
      console.log('\nüìã Ki·ªÉm tra c√°c c·ªôt quan tr·ªçng:');
      console.log(`  - NGAY_HT: ${sampleData.NGAY_HT} (${typeof sampleData.NGAY_HT})`);
      console.log(`  - SO_CT: ${sampleData.SO_CT} (${typeof sampleData.SO_CT})`);
      console.log(`  - NGAY_CT: ${sampleData.NGAY_CT} (${typeof sampleData.NGAY_CT})`);
      console.log(`  - DIEN_GIAI: ${sampleData.DIEN_GIAI} (${typeof sampleData.DIEN_GIAI})`);
      console.log(`  - TK_NO: ${sampleData.TK_NO} (${typeof sampleData.TK_NO})`);
      console.log(`  - TK_CO: ${sampleData.TK_CO} (${typeof sampleData.TK_CO})`);
      console.log(`  - SO_TIEN: ${sampleData.SO_TIEN} (${typeof sampleData.SO_TIEN})`);
    }
    
    console.log('\n‚úÖ Test ƒë∆°n gi·∫£n ho√†n th√†nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói test:', error.toString());
  }
}

/**
 * Test t·∫°o b√°o c√°o ƒë∆°n gi·∫£n
 */
function testTaoBaoCaoSimple() {
  console.log('üß™ TEST T·∫†O B√ÅO C√ÅO ƒê∆†N GI·∫¢N');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // ƒê·ªçc d·ªØ li·ªáu v·ªõi h√†m hi·ªán t·∫°i
    const allTransactionsRaw = readDataFromPrefixedSheetsWithThue(
      ss, 
      'DL_', 
      ['NGAY_HT', 'TK_NO', 'TK_CO', 'SO_TIEN', 'TK_THUE', 'THUE_VAT', 'SO_CT', 'NGAY_CT', 'DIEN_GIAI']
    );
    
    console.log(`üìä ƒê√£ ƒë·ªçc ${allTransactionsRaw.length} giao d·ªãch`);
    
    if (allTransactionsRaw.length === 0) {
      console.log('‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ test');
      return;
    }
    
    // X·ª≠ l√Ω thu·∫ø
    const allTransactions = xuLyPhatSinhThueTuTK_THUE(allTransactionsRaw);
    console.log(`üìä Sau x·ª≠ l√Ω thu·∫ø: ${allTransactions.length} giao d·ªãch`);
    
    // T·∫°o b√°o c√°o ƒë∆°n gi·∫£n
    const outputData = [];
    const headers = ['Ng√†y Ghi S·ªï', 'S·ªë Ch·ª©ng T·ª´', 'Ng√†y Ch·ª©ng T·ª´', 'Di·ªÖn Gi·∫£i', 'TK ƒê·ªëi ·ª®ng', 'Ph√°t Sinh N·ª£', 'Ph√°t Sinh C√≥', 'D∆∞ N·ª£ Cu·ªëi K·ª≥', 'D∆∞ C√≥ Cu·ªëi K·ª≥'];
    
    outputData.push(['S·ªî CHI TI·∫æT T√ÄI KHO·∫¢N - TEST', '', '', '', '', '', '', '', '']);
    outputData.push(headers);
    
    // Th√™m 10 giao d·ªãch ƒë·∫ßu ti√™n
    for (let i = 0; i < Math.min(10, allTransactions.length); i++) {
      const trans = allTransactions[i];
      
      console.log(`\nüìã Giao d·ªãch ${i + 1}:`);
      console.log(`  - NGAY_HT: ${trans.NGAY_HT}`);
      console.log(`  - SO_CT: ${trans.SO_CT || '(r·ªóng)'}`);
      console.log(`  - NGAY_CT: ${trans.NGAY_CT || '(r·ªóng)'}`);
      console.log(`  - DIEN_GIAI: ${trans.DIEN_GIAI || '(r·ªóng)'}`);
      console.log(`  - TK_NO: ${trans.TK_NO}`);
      console.log(`  - TK_CO: ${trans.TK_CO}`);
      console.log(`  - SO_TIEN: ${trans.SO_TIEN}`);
      
      outputData.push([ 
        new Date(trans.NGAY_HT), 
        trans.SO_CT || '', 
        trans.NGAY_CT ? new Date(trans.NGAY_CT) : '', 
        trans.DIEN_GIAI || '', 
        trans.TK_NO === '156' ? trans.TK_CO : trans.TK_NO, 
        trans.TK_NO === '156' ? trans.SO_TIEN : 0, 
        trans.TK_CO === '156' ? trans.SO_TIEN : 0, 
        0, 
        0 
      ]);
    }
    
    // Ghi ra sheet test
    const sheetTest = ss.getSheetByName('TEST_SIMPLE');
    if (!sheetTest) {
      ss.insertSheet('TEST_SIMPLE');
    }
    
    const finalSheet = ss.getSheetByName('TEST_SIMPLE');
    finalSheet.clear();
    
    if (outputData.length > 0) {
      finalSheet.getRange(1, 1, outputData.length, 9).setValues(outputData);
    }
    
    console.log('‚úÖ ƒê√£ t·∫°o b√°o c√°o test trong sheet TEST_SIMPLE');
    
  } catch (error) {
    console.error('‚ùå L·ªói test:', error.toString());
  }
}